name: Build auth portal

on:
  push:
    branches: ['main']
  pull_request:
    branches: ['main']

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [20.x]

    steps:
      - name: Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.10.0
        with:
          access_token: ${{ github.token }}

      - uses: actions/checkout@v3

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'yarn'

      - name: Debug Secrets
        run: |
          echo "Checking if NPM_TOKEN secret is available..."
          if [ -n "${{ secrets.NPM_TOKEN }}" ]; then
            echo "✅ NPM_TOKEN secret is set and has value"
            echo "Length: ${#NPM_TOKEN}"
          else
            echo "❌ NPM_TOKEN secret is empty or not accessible"
          fi
          
          echo "Available secrets:"
          echo "GITHUB_TOKEN: ${{ github.token != '' }}"
          echo "NPM_TOKEN: ${{ secrets.NPM_TOKEN != '' }}"

      - name: Verify Secret Access
        run: |
          echo "=== Secret Verification ==="
          echo "Repository: ${{ github.repository }}"
          echo "Event type: ${{ github.event_name }}"
          echo "Is PR from fork: ${{ github.event.pull_request.head.repo.full_name != github.repository }}"
          echo "NPM_TOKEN exists: ${{ secrets.NPM_TOKEN != '' }}"
          echo "========================"

      - name: Full Build Process
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: |
          echo "Setting up NPM authentication..."
          echo "Debug: Direct secret access: ${{ secrets.NPM_TOKEN != '' }}"
          echo "Debug: Environment variable NPM_TOKEN: '$NPM_TOKEN'"
          echo "Debug: Environment variable length: ${#NPM_TOKEN}"
          
          if [ -n "$NPM_TOKEN" ]; then
            echo "//registry.npmjs.org/:_authToken=${NPM_TOKEN}" > ~/.npmrc
            echo "NPM authentication configured"
          else
            echo "Warning: NPM_TOKEN is empty, proceeding without authentication"
          fi
          
          touch .env
          if [ -f .env.qa ]; then
            cp .env.qa .env
            echo "Environment file copied from .env.qa"
          else
            echo "Warning: .env.qa file not found, using empty .env"
          fi
          
          yarn
          yarn build
